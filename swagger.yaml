openapi: 3.0.0
info:
  title: Orders API
  version: 1.0.0
paths:
  /orders:
    get:
      summary: Get a list of orders
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                orders:
                  - id: "123"
                    product: "Product A"
                    customer: "John Doe"
                    color: "Red"
                    category: "Electronics"
                    quantity: 5
                    price: 49.99
                  - id: "456"
                    product: "Product B"
                    customer: "Jane Smith"
                    color: "Blue"
                    category: "Clothing"
                    quantity: 10
                    price: 29.99
    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              example:
                id: "789"
                product: "Product C"
                customer: "Alice Johnson"
                color: "Green"
                category: "Toys"
                quantity: 3
                price: 99.99
    put:
      summary: Update an existing order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              example:
                id: "789"
                product: "Updated Product C"
                customer: "Alice Johnson"
                color: "Green"
                category: "Toys"
                quantity: 5
                price: 129.99
        '404':
          description: Order not found
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          description: Order id
        product:
          type: string
          description: Product name
        phone:
          type: string
          title: Phone number
          minLength: 10
          pattern: '^1-\\d{3}-\\d{3}-\\d{4}$'
        color:
          type: string
          enum: ['Blue', 'Green', 'Red']
        status:
          type: string
          enum: ['Pending', 'Canceled', 'Done']
        category:
          type: string
        quantity:
          type: number
          minimum: 1
          maximum: 5
        price:
          type: number
          minimum: 100
          maximum: 1500
      required:
        - product
        - phone
        - quantity
        - price
